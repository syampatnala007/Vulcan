import React, { useState } from 'react';

const FileExplorer = () => {
  const [fileList, setFileList] = useState([]);

  const handleFilePickerClick = async () => {
    try {
      const directoryHandle = await window.showDirectoryPicker();
      const filesWithDetails = await buildFileTree(directoryHandle);
      setFileList(filesWithDetails);
    } catch (error) {
      console.error('Error accessing the selected directory:', error);
    }
  };

  const buildFileTree = async (directory) => {
    const files = [];
    for await (const [name, handle] of directory.entries()) {
      if (handle.isDirectory) {
        files.push({
          name,
          isFile: false,
          isExpanded: false, // New property to keep track of folder expansion
          content: await buildFileTree(handle),
        });
      } else {
        files.push({
          name,
          isFile: true,
        });
      }
    }
    return files;
  };

  const toggleFolderVisibility = (folderName) => {
    setFileList((prevFileList) =>
      prevFileList.map((file) => {
        if (!file.isFile && file.name === folderName) {
          return { ...file, isExpanded: !file.isExpanded };
        } else {
          return file;
        }
      })
    );
  };

  const renderFileTree = (fileList) => {
    return (
      <ul>
        {fileList.map((file, index) => (
          <li key={index}>
            {file.isFile ? (
              <span>{file.name}</span>
            ) : (
              <span onClick={() => toggleFolderVisibility(file.name)}>
                <strong>{file.name}</strong>
                {file.isExpanded && renderFileTree(file.content)} {/* Render subfolders if expanded */}
              </span>
            )}
          </li>
        ))}
      </ul>
    );
  };

  return (
    <div>
      <button onClick={handleFilePickerClick}>Select Directory</button>
      <div>
        <h2>Files and folders in the selected directory:</h2>
        {fileList.length > 0 ? renderFileTree(fileList) : <p>No directory selected</p>}
      </div>
    </div>
  );
};

export default FileExplorer;
