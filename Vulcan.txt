import React, { useState } from 'react';

const FileExplorer = () => {
  const [fileList, setFileList] = useState([]);

  const handleFilePickerClick = async () => {
    try {
      const directoryHandle = await window.showDirectoryPicker();
      const filesWithDetails = await buildFileTree(directoryHandle);
      setFileList(filesWithDetails);
    } catch (error) {
      console.error('Error accessing the selected directory:', error);
    }
  };

  const buildFileTree = async (directory) => {
    const entries = await directory.createReader().readEntries();
    const files = await Promise.all(
      entries.map(async (entry) => {
        if (entry.isDirectory) {
          return {
            name: entry.name,
            isFile: false,
            isExpanded: false,
          };
        } else {
          return {
            name: entry.name,
            isFile: true,
          };
        }
      })
    );
    return files;
  };

  const toggleFolderVisibility = async (folder) => {
    if (!folder.isExpanded) {
      try {
        const directoryHandle = await window.getDirectoryHandle(folder.name);
        const subFilesWithDetails = await buildFileTree(directoryHandle);
        folder.content = subFilesWithDetails;
        folder.isExpanded = true;
        setFileList([...fileList]);
      } catch (error) {
        console.error('Error accessing the folder:', error);
      }
    } else {
      folder.isExpanded = false;
      setFileList([...fileList]);
    }
  };

  const renderFileTree = (fileList) => {
    return (
      <ul>
        {fileList.map((file, index) => (
          <li key={index}>
            {file.isFile ? (
              <span>{file.name}</span>
            ) : (
              <span onClick={() => toggleFolderVisibility(file)}>
                <strong>{file.name}</strong>
                {file.isExpanded && renderFileTree(file.content)} {/* Render subfolders if expanded */}
              </span>
            )}
          </li>
        ))}
      </ul>
    );
  };

  return (
    <div>
      <button onClick={handleFilePickerClick}>Select Directory</button>
      <div>
        <h2>Files and folders in the selected directory:</h2>
        {fileList.length > 0 ? renderFileTree(fileList) : <p>No directory selected</p>}
      </div>
    </div>
  );
};

export default FileExplorer;
