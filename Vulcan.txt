import React, { useState } from 'react';
import { useDropzone } from 'react-dropzone';

const FileExplorer = () => {
  const [fileList, setFileList] = useState([]);
  const [currentFolderPath, setCurrentFolderPath] = useState('');

  const onDrop = (acceptedFiles) => {
    // Handle the selected files here, acceptedFiles will contain the files within the selected directory
    const filesWithDetails = acceptedFiles.map((file) => ({
      name: file.name,
      isFile: true,
      path: file.path, // The file.path might not be a full global path but can provide useful file information
    }));
    setFileList(filesWithDetails);
  };

  const { getRootProps, getInputProps, isDragActive } = useDropzone({
    accept: '*', // Allow any file type to be dropped
    multiple: true, // Allow multiple files to be dropped
    onDrop,
    noClick: true, // Disable the default click behavior to prevent file selection dialog
  });

  const renderFileList = () => {
    return (
      <ul>
        {fileList.map((file, index) => (
          <li key={index}>
            {file.isFile ? (
              <span>{file.name}</span>
            ) : (
              <span>
                <strong>{file.name}</strong>
                {file.isExpanded && renderFileList()} {/* Render subfolders if expanded */}
              </span>
            )}
          </li>
        ))}
      </ul>
    );
  };

  return (
    <div>
      <div {...getRootProps()}>
        <input {...getInputProps()} webkitdirectory="" />
        {isDragActive ? (
          <p>Drop the directory here ...</p>
        ) : (
          <p>Drag 'n' drop a directory here, or click to select a directory</p>
        )}
      </div>
      <div>
        <h2>Files and folders in the selected directory:</h2>
        {fileList.length > 0 ? renderFileList() : <p>No directory selected</p>}
      </div>
    </div>
  );
};

export default FileExplorer;
